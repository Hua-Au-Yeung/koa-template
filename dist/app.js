import{DateTime as x}from"luxon";import P from"path";import{env as g}from"process";import{createLogger as O,format as l,transports as y}from"winston";import c from"winston-daily-rotate-file";var{combine:z,timestamp:$,json:F,errors:k}=l,s=`${P.resolve()}/log`,d=e=>l((r,o)=>r.file!==void 0&&r.file===e?r:!1),a=O({level:"info",format:z(k({stack:!0}),$({format:()=>x.now().toFormat("yyyy-MM-dd HH:mm:ss")}),F()),defaultMeta:{},transports:[new c({filename:`${s}/error-%DATE%.log`,datePattern:"YYYY-w",zippedArchive:!1,maxSize:"20m",maxFiles:"30d",level:"error"}),new c({filename:`${s}/all-combined-%DATE%.log`,datePattern:"YYYY-w",zippedArchive:!0,maxSize:"20m",maxFiles:"30d",level:g.LOG_LEVEL||"debug"}),new c({filename:`${s}/http-%DATE%.log`,datePattern:"YYYY-w",zippedArchive:!1,maxSize:"20m",maxFiles:"53",level:"info",format:d("http")()}),new c({filename:`${s}/framework-%DATE%.log`,datePattern:"YYYY-w",zippedArchive:!1,maxSize:"20m",maxFiles:"53",level:"info",format:d("framework")()})]});g.NODE_ENV!=="production"&&(JSON.parse(g.DEBUG||"false")&&(a.exceptions.handle(new y.File({filename:`${s}/exception.log`})),a.rejections.handle(new y.File({filename:`${s}/rejections.log`}))),a.add(new y.Console({level:g.LOG_LEVEL||"debug",format:l.combine(l.colorize(),l.simple())})));a.exitOnError=!1;import D from"dotenv";import I from"path";import{env as Y}from"process";Y.NODE_ENV==="production"?(a.info("Loaded .env",{file:"framework"}),D.config({path:I.resolve(".env")})):(Y.NODE_ENV="develop",a.info("Loaded .env.dev",{file:"framework"}),D.config({path:I.resolve(".env.dev")}));import M from"crypto";import{DateTime as L}from"luxon";import{env as N}from"process";var R=async(e,r)=>{e.state.currentMiddleware="framework/init-request",e.state.requestId=M.randomBytes(8).toString("hex"),e.state.requestTimestamp=Date.now(),a.info(`\u{1F680} Request[ID:${e.state.requestId} Starting`,{file:"framework"});try{await r()}catch(t){let _=t;if(typeof t=="object"&&t!==null&&"status"in t&&"message"in t){let n=t;e.status=n.status||500,JSON.parse(N.DEBUG||"false")&&(n.expose=!0),n.expose&&(e.body=n.message)}else e.status=500,JSON.parse(N.DEBUG||"false")?e.body=t:e.body=`500 Internal Server Error, ID:${e.state.requestId}
`;e.app.emit("error",_,e)}let o;switch(e.response.status.toString().substring(0,1)){case"2":case"3":o="info";break;case"4":o="warn";break;case"5":o="error";break;default:o="info"}e.set("Request-Id",e.state.requestId),a.log(o,`${e.ip} - ${e.request.method} - ${e.response.status} - ${e.request.url}`,{file:"http",requestId:e.state.requestId,ip:e.ip,timestamp:L.fromMillis(e.state.requestTimestamp).toFormat("yyyy-MM-dd HH:mm:ss"),duration:Date.now()-e.state.requestTimestamp}),a.info(`\u2705 Request[ID:${e.state.requestId} Ended`,{file:"framework"})};import H from"@koa/router";var S=new H;import q from"fs";import U from"https";import G from"koa";import{env as u}from"process";var E=u.HOST,w=parseInt(u.PORT),B=new G;B.proxy=!0;var V=["framework/init-request","framework/http-base-auth"],v=class{mainRouter=S;app=B;__construct(){}async run(){if(this.app.use(R).use(S.routes()).use(S.allowedMethods()).on("error",(r,o)=>{let t={requestId:o.state.requestId,ip:o.ip};V.includes(o.state.currentMiddleware)&&(t.file="framework"),a.error(`\u274C Error Event: ${r.toString().trim()}`,t)}),JSON.parse(u.SSL||"false")){let r={key:q.readFileSync(u.SSL_KEY),cert:q.readFileSync(u.SSL_CERT)};U.createServer(r,this.app.callback()).listen(w,E,()=>{a.info(`HTTPS server is running on https://${E}:${w}`,{file:"framework"})})}else this.app.listen(w,E,()=>{a.info(`HTTP server is running on http://${E}:${w}`,{file:"framework"})})}},J=new v,h=J;import{env as p}from"process";import K from"winston";import C from"winston-daily-rotate-file";import j from"winston-transport-sentry-node";a.add(new C({filename:`${s}/biz-%DATE%.log`,datePattern:"YYYY-w",zippedArchive:!1,maxSize:"20m",maxFiles:"53",level:"info",format:d("biz")()}));a.add(new C({filename:`${s}/exec-%DATE%.log`,datePattern:"YYYY-w",zippedArchive:!1,maxSize:"20m",maxFiles:"53",level:"info",format:d("exec")()}));JSON.parse(p.SENTRY||"false")&&p.NODE_ENV==="production"&&JSON.parse(p.DEBUG||"false")===!1&&a.add(new j.default({sentry:{dsn:p.SENTRY_DSN},level:p.SENTRY_LOG_LEVEL,format:K.format(e=>(e.tags={NODE_ID:p.NODE_ID},e))()}));var i=a;import{exec as W}from"child_process";import{readFile as Q}from"fs/promises";import X from"path";import{env as Z}from"process";var A=e=>new Promise((r,o)=>{W(e,(t,_,n)=>{if(t){o(t);return}if(n){o(n);return}r(_)})});var ee=async()=>{try{let e=await Q(X.resolve("cmd.json"),"utf-8");return JSON.parse(e)}catch(e){return i.error("Failed to load cmd.json:",e),{}}},b=e=>{setInterval(async()=>{e.context.cmds=await ee(),i.info("Reload command list")},parseInt(Z.LOADCMDINTERVAL)||2e3)};import te from"koa-basic-auth";var T=e=>async(r,o)=>{r.state.currentMiddleware="framework/http-base-auth",await te(e)(r,o)};import re from"@koa/router";import oe from"koa-bodyparser";import{env as m}from"process";import ae from"fs";import se from"path";var f=new re;f.use(oe());f.get("/cmd/:id",T({name:m.HTTP_BASIC_AUTH_USERNAME,pass:m.HTTP_BASIC_AUTH_PASSWORD}),async e=>{let r=e.params.id,o=e.cmds[r];if(o==null){e.status=404,e.body=`There is no such command
`;return}return m.NODE_ENV=="production",A(o).then(t=>{e.body=t,i.info(t,{file:"exec",exec:{type:"cmd",cmdId:r},requestId:e.state.requestId,ip:e.ip})}).catch(t=>{i.error(t.stack,{file:"exec",exec:{type:"cmd",cmdId:r},requestId:e.state.requestId,ip:e.ip}),e.throw(500,t.message,{expose:m.DEBUG=="true"})})});f.get("/script/:name",T({name:m.HTTP_BASIC_AUTH_USERNAME,pass:m.HTTP_BASIC_AUTH_PASSWORD}),async e=>{let r=e.params.name,o=se.resolve(`./script/${r}`);if(!ae.existsSync(o)){e.status=404,e.body=`There is no such script
`;return}return A(o).then(t=>{e.body=t,i.info(t,{file:"exec",exec:{type:"script",scriptName:r},requestId:e.state.requestId,ip:e.ip})}).catch(t=>{i.error(t.stack,{file:"exec",exec:{type:"script",scriptName:r},requestId:e.state.requestId,ip:e.ip}),e.throw(500,t.message,{expose:m.DEBUG=="true"})})});(async()=>(h.mainRouter.use(f.routes(),f.allowedMethods()),await h.run(),b(h.app)))();
//# sourceMappingURL=app.js.map